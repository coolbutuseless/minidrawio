% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DrawIODocument.R
\name{DrawIODocument}
\alias{DrawIODocument}
\alias{drawio_doc}
\title{DrawIODocument Class}
\description{
DrawIODocument Class

DrawIODocument Class
}
\details{
This is a slightly specialized subclass of \code{DrawIOElement}.

DrawIO documents *must* have a root element
}
\section{Super class}{
\code{\link[minidrawio:DrawIOElement]{minidrawio::DrawIOElement}} -> \code{DrawIODocument}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{DrawIODocument$new()}}
\item \href{#method-save}{\code{DrawIODocument$save()}}
\item \href{#method-print}{\code{DrawIODocument$print()}}
\item \href{#method-as_character}{\code{DrawIODocument$as_character()}}
\item \href{#method-clone}{\code{DrawIODocument$clone()}}
}
}
\if{html}{
\out{<details ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="minidrawio" data-topic="DrawIOElement" data-id="add">}\href{../../minidrawio/html/DrawIOElement.html#method-add}{\code{minidrawio::DrawIOElement$add()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="minidrawio" data-topic="DrawIOElement" data-id="append">}\href{../../minidrawio/html/DrawIOElement.html#method-append}{\code{minidrawio::DrawIOElement$append()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="minidrawio" data-topic="DrawIOElement" data-id="as_character_inner">}\href{../../minidrawio/html/DrawIOElement.html#method-as_character_inner}{\code{minidrawio::DrawIOElement$as_character_inner()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="minidrawio" data-topic="DrawIOElement" data-id="circle">}\href{../../minidrawio/html/DrawIOElement.html#method-circle}{\code{minidrawio::DrawIOElement$circle()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="minidrawio" data-topic="DrawIOElement" data-id="copy">}\href{../../minidrawio/html/DrawIOElement.html#method-copy}{\code{minidrawio::DrawIOElement$copy()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="minidrawio" data-topic="DrawIOElement" data-id="diagram">}\href{../../minidrawio/html/DrawIOElement.html#method-diagram}{\code{minidrawio::DrawIOElement$diagram()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="minidrawio" data-topic="DrawIOElement" data-id="line">}\href{../../minidrawio/html/DrawIOElement.html#method-line}{\code{minidrawio::DrawIOElement$line()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="minidrawio" data-topic="DrawIOElement" data-id="mxCell">}\href{../../minidrawio/html/DrawIOElement.html#method-mxCell}{\code{minidrawio::DrawIOElement$mxCell()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="minidrawio" data-topic="DrawIOElement" data-id="mxGeometry">}\href{../../minidrawio/html/DrawIOElement.html#method-mxGeometry}{\code{minidrawio::DrawIOElement$mxGeometry()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="minidrawio" data-topic="DrawIOElement" data-id="mxGraphModel">}\href{../../minidrawio/html/DrawIOElement.html#method-mxGraphModel}{\code{minidrawio::DrawIOElement$mxGraphModel()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="minidrawio" data-topic="DrawIOElement" data-id="mxPoint">}\href{../../minidrawio/html/DrawIOElement.html#method-mxPoint}{\code{minidrawio::DrawIOElement$mxPoint()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="minidrawio" data-topic="DrawIOElement" data-id="polygon">}\href{../../minidrawio/html/DrawIOElement.html#method-polygon}{\code{minidrawio::DrawIOElement$polygon()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="minidrawio" data-topic="DrawIOElement" data-id="rand_id">}\href{../../minidrawio/html/DrawIOElement.html#method-rand_id}{\code{minidrawio::DrawIOElement$rand_id()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="minidrawio" data-topic="DrawIOElement" data-id="rect">}\href{../../minidrawio/html/DrawIOElement.html#method-rect}{\code{minidrawio::DrawIOElement$rect()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="minidrawio" data-topic="DrawIOElement" data-id="remove">}\href{../../minidrawio/html/DrawIOElement.html#method-remove}{\code{minidrawio::DrawIOElement$remove()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="minidrawio" data-topic="DrawIOElement" data-id="root">}\href{../../minidrawio/html/DrawIOElement.html#method-root}{\code{minidrawio::DrawIOElement$root()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="minidrawio" data-topic="DrawIOElement" data-id="text">}\href{../../minidrawio/html/DrawIOElement.html#method-text}{\code{minidrawio::DrawIOElement$text()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="minidrawio" data-topic="DrawIOElement" data-id="update">}\href{../../minidrawio/html/DrawIOElement.html#method-update}{\code{minidrawio::DrawIOElement$update()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="minidrawio" data-topic="DrawIOElement" data-id="UserObject">}\href{../../minidrawio/html/DrawIOElement.html#method-UserObject}{\code{minidrawio::DrawIOElement$UserObject()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Create a document
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DrawIODocument$new(
  .name = "mxfile",
  host = "app.diagrams.net",
  modified = "2020-04-14T06:47:56.100Z",
  agent = "5.0 (Macintosh)",
  etag = "4dx1W4AIjCXgZhGWsQ6w",
  version = "12.9.12",
  type = "device",
  ...
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{.name}}{node name}

\item{\code{host}}{host. default 'app.diagrams.net'}

\item{\code{modified}}{Last modified date}

\item{\code{agent}}{user agent}

\item{\code{etag}}{etag}

\item{\code{version}}{version}

\item{\code{type}}{default: "device"}

\item{\code{...}}{extra arguments passed to \code{DrawIOElement}
Save DrawIO document}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-save"></a>}}
\if{latex}{\out{\hypertarget{method-save}{}}}
\subsection{Method \code{save()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DrawIODocument$save(filename, include_declaration = TRUE, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{filename}}{filename}

\item{\code{include_declaration}}{default: TRUE}

\item{\code{...}}{extra arguments passed to parent class
Print the DrawIO string}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-print"></a>}}
\if{latex}{\out{\hypertarget{method-print}{}}}
\subsection{Method \code{print()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DrawIODocument$print(include_declaration = TRUE, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{include_declaration}}{default: TRUE}

\item{\code{...}}{extra arguments passed to parent class
Character representation}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-as_character"></a>}}
\if{latex}{\out{\hypertarget{method-as_character}{}}}
\subsection{Method \code{as_character()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DrawIODocument$as_character(..., depth = 0, include_declaration = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{extra arguments passed to parent class}

\item{\code{depth}}{current rendering depth}

\item{\code{include_declaration}}{default: TRUE}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\if{latex}{\out{\hypertarget{method-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DrawIODocument$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
